def ValidBlock(block):
    for num in range(1,10):
        if block.count(num) > 1:
            return False
    return True

def ValidPuzzle(puzzle):
    # Rows
    for row in puzzle:
        if not ValidBlock(row):
            return False
    
    # Columns
    for i in range(len(puzzle)):
        column = [puzzle[x][i] for x in range(len(puzzle))]
        if not ValidBlock(column):
            return False
        
    # Blocks
    for a in range(3):
        for b in range(3):
            block = []
            for c in range(3):
                for d in range(3):
                    block.append(puzzle[a*3+c][b*3+d])
            if not ValidBlock(block):
                return False
    
    return True

def NextZero(puzzle):
    for i, c in enumerate(puzzle):
        if 0 in c:
            return (i, c.index(0))
    return False

def sudoku(puzzle, top=True):
    current = NextZero(puzzle)
    if not current:
        if top:
            return puzzle
        else:
            return puzzle, True
    
    for num in range(1, 10):
        puzzle[current[0]][current[1]] = num
        
        if ValidPuzzle(puzzle):
            r = sudoku(puzzle, top=False)
            # If Finished
            if r[1] == True:
                if top:
                    return puzzle
                else:
                    return puzzle, True
            # Otherwise was wrong number
        else:
            continue
    
    puzzle[current[0]][current[1]] = 0
    
    return puzzle, False
